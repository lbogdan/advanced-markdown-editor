version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build Website in Modern Mode
          command: yarn build --modern
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: dist
          paths:
            - .
  test_unit:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Install JUnit Coverage Reporter
          command: yarn add -D jest-junit
      - run:
          name: Run Unit Tests with JUnit as Reporter
          command: yarn test:unit --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
  lint:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Lint
          command: yarn lint
  deploy_production:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run:
          name: Netlify Deploy
          command: npx netlify-cli deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod --dir=dist --message "Automatic Production Deployment - $CIRCLE_BRANCH@$(echo $CIRCLE_SHA1 | cut -c -7)"
  deploy_branch:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run:
          name: Netlify Deploy
          command: npx netlify-cli deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --dir=dist --message "Automatic Draft Deployment - $CIRCLE_BRANCH@$(echo $CIRCLE_SHA1 | cut -c -7)"
workflows:
  version: 2
  build:
    jobs:
      - build
      - test_unit
      - lint
      - deploy_production:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy_branch:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master